{"ast":null,"code":"import _slicedToArray from\"/Users/a000/Desktop/list/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import Form from'./components/Form';import TodoList from'./components/TodoList';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),listData=_useState4[0],setListData=_useState4[1];var _useState5=useState('all'),_useState6=_slicedToArray(_useState5,2),status=_useState6[0],setStatus=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),filteredState=_useState8[0],setFilteredState=_useState8[1];useEffect(function(){var getLocalTodos=function getLocalTodos(){if(localStorage.getItem('todos')===null){localStorage.setItem('todos',JSON.stringify([]));}else setListData(JSON.parse(localStorage.getItem('todos')));};getLocalTodos();},[]);useEffect(function(){var filterHandler=function filterHandler(){switch(status){case'completed':setFilteredState(listData.filter(function(el){return el.status===true;}));break;case'uncompleted':setFilteredState(listData.filter(function(el){return el.status===false;}));break;case'all':setFilteredState(listData);break;default:break;}};var saveLocalTodos=function saveLocalTodos(){localStorage.setItem('todos',JSON.stringify(listData));};filterHandler();saveLocalTodos();},[status,listData]);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"ToDo LiSt\")),/*#__PURE__*/React.createElement(Form,{inputValue:inputValue,setInputValue:setInputValue,listData:listData,setListData:setListData,setStatus:setStatus}),/*#__PURE__*/React.createElement(TodoList,{listData:listData,setListData:setListData,filteredState:filteredState}));};export default App;","map":{"version":3,"sources":["/Users/a000/Desktop/list/todo-list/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputValue","setInputValue","listData","setListData","status","setStatus","filteredState","setFilteredState","getLocalTodos","localStorage","getItem","setItem","JSON","stringify","parse","filterHandler","filter","el","saveLocalTodos"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACoBJ,QAAQ,CAAC,EAAD,CAD5B,wCACTK,UADS,eACGC,aADH,8BAEgBN,QAAQ,CAAC,EAAD,CAFxB,yCAETO,QAFS,eAECC,WAFD,8BAGYR,QAAQ,CAAC,KAAD,CAHpB,yCAGTS,MAHS,eAGDC,SAHC,8BAI0BV,QAAQ,CAAC,EAAD,CAJlC,yCAITW,aAJS,eAIMC,gBAJN,eAMhBX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,IAAtC,CAA4C,CAC1CD,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,EACD,CAFD,IAEOV,CAAAA,WAAW,CAACS,IAAI,CAACE,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAD,CAAX,CACR,CAJD,CAKAF,aAAa,GACd,CAPQ,CAON,EAPM,CAAT,CASAZ,SAAS,CAAC,UAAM,CACd,GAAMmB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,OAAQX,MAAR,EACE,IAAK,WAAL,CACEG,gBAAgB,CAACL,QAAQ,CAACc,MAAT,CAAgB,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACb,MAAH,GAAc,IAAlB,EAAlB,CAAD,CAAhB,CACA,MACF,IAAK,aAAL,CACEG,gBAAgB,CAACL,QAAQ,CAACc,MAAT,CAAgB,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACb,MAAH,GAAc,KAAlB,EAAlB,CAAD,CAAhB,CACA,MACF,IAAK,KAAL,CACEG,gBAAgB,CAACL,QAAD,CAAhB,CACA,MACF,QACE,MAXJ,CAaD,CAdD,CAeA,GAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BT,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeX,QAAf,CAA9B,EACD,CAFD,CAGAa,aAAa,GACbG,cAAc,GACf,CArBQ,CAqBN,CAACd,MAAD,CAASF,QAAT,CArBM,CAAT,CAuBA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,+CACE,0CADF,CADF,cAIE,oBAAC,IAAD,EAAM,UAAU,CAAEF,UAAlB,CAA8B,aAAa,CAAEC,aAA7C,CACE,QAAQ,CAAEC,QADZ,CACsB,WAAW,CAAEC,WADnC,CAEE,SAAS,CAAEE,SAFb,EAJF,cAOE,oBAAC,QAAD,EAAU,QAAQ,CAAEH,QAApB,CAA8B,WAAW,CAAEC,WAA3C,CAAwD,aAAa,CAAEG,aAAvE,EAPF,CADF,CAWD,CAjDD,CAmDA,cAAeP,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nconst App = () => {\n  const [inputValue, setInputValue] = useState('')\n  const [listData, setListData] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filteredState, setFilteredState] = useState([])\n\n  useEffect(() => {\n    const getLocalTodos = () => {\n      if (localStorage.getItem('todos') === null) {\n        localStorage.setItem('todos', JSON.stringify([]))\n      } else setListData(JSON.parse(localStorage.getItem('todos')))\n    }\n    getLocalTodos()\n  }, [])\n  \n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case 'completed':\n          setFilteredState(listData.filter(el => el.status === true))\n          break\n        case 'uncompleted':\n          setFilteredState(listData.filter(el => el.status === false))\n          break\n        case 'all':\n          setFilteredState(listData)\n          break\n        default:\n          break\n      }\n    }\n    const saveLocalTodos = () => {  \n      localStorage.setItem('todos', JSON.stringify(listData))\n    }\n    filterHandler()\n    saveLocalTodos()\n  }, [status, listData])\n  \n  return (\n    <div className='App'>\n      <header>\n        <h1>ToDo LiSt</h1>\n      </header>\n      <Form inputValue={inputValue} setInputValue={setInputValue}\n        listData={listData} setListData={setListData}\n        setStatus={setStatus} />\n      <TodoList listData={listData} setListData={setListData} filteredState={filteredState} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}